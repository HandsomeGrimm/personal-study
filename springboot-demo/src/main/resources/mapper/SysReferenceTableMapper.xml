<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="grimm.study.mapper.SysReferenceTableMapper">
  <resultMap id="BaseResultMap" type="grimm.study.model.SysReferenceTable">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="reference_type_name" jdbcType="VARCHAR" property="referenceTypeName" />
    <result column="reference_type_id" jdbcType="TINYINT" property="referenceTypeId" />
    <result column="reference_name" jdbcType="VARCHAR" property="referenceName" />
    <result column="reference_code" jdbcType="VARCHAR" property="referenceCode" />
    <result column="reference_value" jdbcType="VARCHAR" property="referenceValue" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="order_seq" jdbcType="INTEGER" property="orderSeq" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
    <result column="last_commit_userid" jdbcType="INTEGER" property="lastCommitUserid" />
    <result column="last_commit_time" jdbcType="TIMESTAMP" property="lastCommitTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, reference_type_name, reference_type_id, reference_name, reference_code, reference_value, 
    remark, order_seq, delete_flag, last_commit_userid, last_commit_time
  </sql>
  <select id="selectByExample" parameterType="grimm.study.model.SysReferenceTableExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_reference_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_reference_table
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_reference_table
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="grimm.study.model.SysReferenceTableExample">
    delete from sys_reference_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="grimm.study.model.SysReferenceTable">
    insert into sys_reference_table (id, reference_type_name, reference_type_id, 
      reference_name, reference_code, reference_value, 
      remark, order_seq, delete_flag, 
      last_commit_userid, last_commit_time)
    values (#{id,jdbcType=INTEGER}, #{referenceTypeName,jdbcType=VARCHAR}, #{referenceTypeId,jdbcType=TINYINT}, 
      #{referenceName,jdbcType=VARCHAR}, #{referenceCode,jdbcType=VARCHAR}, #{referenceValue,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{orderSeq,jdbcType=INTEGER}, #{deleteFlag,jdbcType=INTEGER}, 
      #{lastCommitUserid,jdbcType=INTEGER}, #{lastCommitTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="grimm.study.model.SysReferenceTable">
    insert into sys_reference_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="referenceTypeName != null">
        reference_type_name,
      </if>
      <if test="referenceTypeId != null">
        reference_type_id,
      </if>
      <if test="referenceName != null">
        reference_name,
      </if>
      <if test="referenceCode != null">
        reference_code,
      </if>
      <if test="referenceValue != null">
        reference_value,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="orderSeq != null">
        order_seq,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="lastCommitUserid != null">
        last_commit_userid,
      </if>
      <if test="lastCommitTime != null">
        last_commit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="referenceTypeName != null">
        #{referenceTypeName,jdbcType=VARCHAR},
      </if>
      <if test="referenceTypeId != null">
        #{referenceTypeId,jdbcType=TINYINT},
      </if>
      <if test="referenceName != null">
        #{referenceName,jdbcType=VARCHAR},
      </if>
      <if test="referenceCode != null">
        #{referenceCode,jdbcType=VARCHAR},
      </if>
      <if test="referenceValue != null">
        #{referenceValue,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderSeq != null">
        #{orderSeq,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="lastCommitUserid != null">
        #{lastCommitUserid,jdbcType=INTEGER},
      </if>
      <if test="lastCommitTime != null">
        #{lastCommitTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="grimm.study.model.SysReferenceTableExample" resultType="java.lang.Long">
    select count(*) from sys_reference_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_reference_table
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.referenceTypeName != null">
        reference_type_name = #{record.referenceTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.referenceTypeId != null">
        reference_type_id = #{record.referenceTypeId,jdbcType=TINYINT},
      </if>
      <if test="record.referenceName != null">
        reference_name = #{record.referenceName,jdbcType=VARCHAR},
      </if>
      <if test="record.referenceCode != null">
        reference_code = #{record.referenceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.referenceValue != null">
        reference_value = #{record.referenceValue,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.orderSeq != null">
        order_seq = #{record.orderSeq,jdbcType=INTEGER},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="record.lastCommitUserid != null">
        last_commit_userid = #{record.lastCommitUserid,jdbcType=INTEGER},
      </if>
      <if test="record.lastCommitTime != null">
        last_commit_time = #{record.lastCommitTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_reference_table
    set id = #{record.id,jdbcType=INTEGER},
      reference_type_name = #{record.referenceTypeName,jdbcType=VARCHAR},
      reference_type_id = #{record.referenceTypeId,jdbcType=TINYINT},
      reference_name = #{record.referenceName,jdbcType=VARCHAR},
      reference_code = #{record.referenceCode,jdbcType=VARCHAR},
      reference_value = #{record.referenceValue,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      order_seq = #{record.orderSeq,jdbcType=INTEGER},
      delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      last_commit_userid = #{record.lastCommitUserid,jdbcType=INTEGER},
      last_commit_time = #{record.lastCommitTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="grimm.study.model.SysReferenceTable">
    update sys_reference_table
    <set>
      <if test="referenceTypeName != null">
        reference_type_name = #{referenceTypeName,jdbcType=VARCHAR},
      </if>
      <if test="referenceTypeId != null">
        reference_type_id = #{referenceTypeId,jdbcType=TINYINT},
      </if>
      <if test="referenceName != null">
        reference_name = #{referenceName,jdbcType=VARCHAR},
      </if>
      <if test="referenceCode != null">
        reference_code = #{referenceCode,jdbcType=VARCHAR},
      </if>
      <if test="referenceValue != null">
        reference_value = #{referenceValue,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderSeq != null">
        order_seq = #{orderSeq,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="lastCommitUserid != null">
        last_commit_userid = #{lastCommitUserid,jdbcType=INTEGER},
      </if>
      <if test="lastCommitTime != null">
        last_commit_time = #{lastCommitTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="grimm.study.model.SysReferenceTable">
    update sys_reference_table
    set reference_type_name = #{referenceTypeName,jdbcType=VARCHAR},
      reference_type_id = #{referenceTypeId,jdbcType=TINYINT},
      reference_name = #{referenceName,jdbcType=VARCHAR},
      reference_code = #{referenceCode,jdbcType=VARCHAR},
      reference_value = #{referenceValue,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      order_seq = #{orderSeq,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      last_commit_userid = #{lastCommitUserid,jdbcType=INTEGER},
      last_commit_time = #{lastCommitTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>