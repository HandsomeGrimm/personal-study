<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="grimm.study.mapper.TFileMapper">
  <resultMap id="BaseResultMap" type="grimm.study.model.TFile">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="module_id" jdbcType="VARCHAR" property="moduleId" />
    <result column="module_type" jdbcType="VARCHAR" property="moduleType" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_size" jdbcType="VARCHAR" property="fileSize" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="file_location_type" jdbcType="INTEGER" property="fileLocationType" />
    <result column="creater_user" jdbcType="INTEGER" property="createrUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, module_id, module_type, file_name, file_size, file_type, file_path, file_location_type, 
    creater_user, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="grimm.study.model.TFile">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_file (module_id, module_type, file_name, 
      file_size, file_type, file_path, 
      file_location_type, creater_user, update_time, 
      create_time)
    values (#{moduleId,jdbcType=VARCHAR}, #{moduleType,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, 
      #{fileSize,jdbcType=VARCHAR}, #{fileType,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}, 
      #{fileLocationType,jdbcType=INTEGER}, #{createrUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="grimm.study.model.TFile">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="moduleId != null">
        module_id,
      </if>
      <if test="moduleType != null">
        module_type,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="fileLocationType != null">
        file_location_type,
      </if>
      <if test="createrUser != null">
        creater_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="moduleId != null">
        #{moduleId,jdbcType=VARCHAR},
      </if>
      <if test="moduleType != null">
        #{moduleType,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileLocationType != null">
        #{fileLocationType,jdbcType=INTEGER},
      </if>
      <if test="createrUser != null">
        #{createrUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="grimm.study.model.TFile">
    update t_file
    <set>
      <if test="moduleId != null">
        module_id = #{moduleId,jdbcType=VARCHAR},
      </if>
      <if test="moduleType != null">
        module_type = #{moduleType,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileLocationType != null">
        file_location_type = #{fileLocationType,jdbcType=INTEGER},
      </if>
      <if test="createrUser != null">
        creater_user = #{createrUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="grimm.study.model.TFile">
    update t_file
    set module_id = #{moduleId,jdbcType=VARCHAR},
      module_type = #{moduleType,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      file_location_type = #{fileLocationType,jdbcType=INTEGER},
      creater_user = #{createrUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>