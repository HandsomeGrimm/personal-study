<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="grimm.study.mapper.QrtzBlobTriggersMapper">
  <resultMap id="BaseResultMap" type="grimm.study.model.QrtzBlobTriggers">
    <id column="SCHED_NAME" jdbcType="VARCHAR" property="schedName" />
    <id column="TRIGGER_NAME" jdbcType="VARCHAR" property="triggerName" />
    <id column="TRIGGER_GROUP" jdbcType="VARCHAR" property="triggerGroup" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="grimm.study.model.QrtzBlobTriggers">
    <result column="BLOB_DATA" jdbcType="LONGVARBINARY" property="blobData" />
  </resultMap>
  <sql id="Base_Column_List">
    SCHED_NAME, `TRIGGER_NAME`, TRIGGER_GROUP
  </sql>
  <sql id="Blob_Column_List">
    BLOB_DATA
  </sql>
  <select id="selectByPrimaryKey" parameterType="grimm.study.model.QrtzBlobTriggersKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from qrtz_blob_triggers
    where SCHED_NAME = #{schedName,jdbcType=VARCHAR}
      and `TRIGGER_NAME` = #{triggerName,jdbcType=VARCHAR}
      and TRIGGER_GROUP = #{triggerGroup,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="grimm.study.model.QrtzBlobTriggersKey">
    delete from qrtz_blob_triggers
    where SCHED_NAME = #{schedName,jdbcType=VARCHAR}
      and `TRIGGER_NAME` = #{triggerName,jdbcType=VARCHAR}
      and TRIGGER_GROUP = #{triggerGroup,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="grimm.study.model.QrtzBlobTriggers">
    insert into qrtz_blob_triggers (SCHED_NAME, `TRIGGER_NAME`, TRIGGER_GROUP, 
      BLOB_DATA)
    values (#{schedName,jdbcType=VARCHAR}, #{triggerName,jdbcType=VARCHAR}, #{triggerGroup,jdbcType=VARCHAR}, 
      #{blobData,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="grimm.study.model.QrtzBlobTriggers">
    insert into qrtz_blob_triggers
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schedName != null">
        SCHED_NAME,
      </if>
      <if test="triggerName != null">
        `TRIGGER_NAME`,
      </if>
      <if test="triggerGroup != null">
        TRIGGER_GROUP,
      </if>
      <if test="blobData != null">
        BLOB_DATA,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schedName != null">
        #{schedName,jdbcType=VARCHAR},
      </if>
      <if test="triggerName != null">
        #{triggerName,jdbcType=VARCHAR},
      </if>
      <if test="triggerGroup != null">
        #{triggerGroup,jdbcType=VARCHAR},
      </if>
      <if test="blobData != null">
        #{blobData,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="grimm.study.model.QrtzBlobTriggers">
    update qrtz_blob_triggers
    <set>
      <if test="blobData != null">
        BLOB_DATA = #{blobData,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where SCHED_NAME = #{schedName,jdbcType=VARCHAR}
      and `TRIGGER_NAME` = #{triggerName,jdbcType=VARCHAR}
      and TRIGGER_GROUP = #{triggerGroup,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="grimm.study.model.QrtzBlobTriggers">
    update qrtz_blob_triggers
    set BLOB_DATA = #{blobData,jdbcType=LONGVARBINARY}
    where SCHED_NAME = #{schedName,jdbcType=VARCHAR}
      and `TRIGGER_NAME` = #{triggerName,jdbcType=VARCHAR}
      and TRIGGER_GROUP = #{triggerGroup,jdbcType=VARCHAR}
  </update>
</mapper>